{"version":3,"sources":["index.js"],"names":["dayIndex","document","querySelector","hourIndex","minuteIndex","secIndex","CountdownTimer","constructor","onTick","targetDate","start","setInterval","startTime","Date","now","timeComp","getTimeComp","getTime","timer","selector","updateTimeLast","days","hours","mins","secs","textContent","pad","value","String","padStart","time","Math","floor"],"mappings":";;;AAmDC,aAnDD,QAAA,oBAEA,MAAMA,EAAWC,SAASC,cAAc,uBAClCC,EAAYF,SAASC,cAAc,wBACnCE,EAAcH,SAASC,cAAc,uBACrCG,EAAWJ,SAASC,cAAc,uBAExC,MAAMI,EACFC,aAAY,OAACC,EAAD,WAASC,IACZD,KAAAA,OAASA,EACTE,KAAAA,QACAD,KAAAA,WAAaA,EAEtBC,QACIC,YAAa,KACHC,MAAAA,EAAYC,KAAKC,MAEjBC,EAAWC,EADA,KAAKP,WAAWQ,UAAYL,GAGxCJ,KAAAA,OAAOO,IACd,MAIV,MAAMG,EAAQ,IAAIZ,EAAe,CAC7Ba,SAAU,WACVX,OAAQY,EACRX,WAAY,IAAII,KAAK,kBAGzB,SAASO,GAAe,KAACC,EAAD,MAAOC,EAAP,KAAcC,EAAd,KAAoBC,IACxCxB,EAASyB,YAAcJ,EACvBlB,EAAUsB,YAAcH,EACxBlB,EAAYqB,YAAcF,EAC1BlB,EAASoB,YAAcD,EAGzB,SAASE,EAAIC,GACFC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGrC,SAASb,EAAYc,GASZ,MAAA,CAACT,KARKU,KAAKC,MAAMF,EAAQ,OAQlBR,MANAI,EAAIK,KAAKC,MAAOF,EAAQ,MAAyB,OAM1CP,KAJRG,EAAIK,KAAKC,MAAOF,EAAQ,KAAoB,MAI9BN,KAFdE,EAAIK,KAAKC,MAAOF,EAAQ,IAAc","file":"src.f0c81248.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst dayIndex = document.querySelector('[data-value=\"days\"]')\nconst hourIndex = document.querySelector('[data-value=\"hours\"]')\nconst minuteIndex = document.querySelector('[data-value=\"mins\"]')\nconst secIndex = document.querySelector('[data-value=\"secs\"]')\n\nclass CountdownTimer {\n    constructor({onTick, targetDate}) {\n        this.onTick = onTick;\n        this.start()\n        this.targetDate = targetDate\n    }\n    start() {\n        setInterval (() => {\n            const startTime = Date.now();\n            const lastTime = this.targetDate.getTime() - startTime;\n            const timeComp = getTimeComp(lastTime)\n\n            this.onTick(timeComp)\n        },1000);\n    }\n}\n\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    onTick: updateTimeLast,\n    targetDate: new Date('Dec 31, 2021'),\n});\n\nfunction updateTimeLast({days, hours, mins, secs}) {\n    dayIndex.textContent = days;\n    hourIndex.textContent = hours;\n    minuteIndex.textContent = mins;\n    secIndex.textContent = secs;\n}\n\n  function pad(value) {\n      return String(value).padStart(2, '0')\n  }\n\n  function getTimeComp(time) {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return {days, hours, mins, secs};\n}\n"]}